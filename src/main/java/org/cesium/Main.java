package org.cesium;

import java.io.IOException;
import java.nio.file.Files;
import java.io.File;
import java.util.List;

public class Main {

    public static void main(String[] args) {
        if (args.length < 1) {
            System.err.println("Usage: java org.cesium.Main <filename.ces>");
            System.exit(1);
        }

        String fileName = args[0];
        File file = new File(fileName);

        try {
            if (file.exists()) {
                // Read the contents of the file
                String code = new String(Files.readAllBytes(file.toPath()));

                // 1. Lexical Analysis
                Scanner scanner = new Scanner(code);
                List<Token> tokens = scanner.scanSourceCode();

//                 Optional: print tokens for debugging
                 System.out.println(tokens);

                // 2. Parsing
                Parser parser = new Parser(tokens);
                ASTNode.CesiumProgram ast = parser.parse();

                // Optional: Print AST for debugging
                 DisplayAST printer = new DisplayAST();
                 System.out.println(printer.toString(ast));

                // 3. Code Generation
                // After we have a CesiumProgram (the AST root), we use CodeGenerator.
                CodeGenerator cg = new CodeGenerator();

                // Provide an output class name. This will create a file: MyCesiumProgram.class
                // in your current directory.
                // Make sure you have org.objectweb.asm on your classpath.
                cg.generateCode(ast, "MyCesiumProgram");

                System.out.println("Compilation successful. Generated MyCesiumProgram.class");

                // 4. Run the Generated Code:
                // From your command line:
                // java MyCesiumProgram
                // This will execute the generated bytecode.

            } else {
                System.err.println("File not found: " + fileName);
            }
        } catch (IOException e) {
            System.err.println("Error reading file: " + fileName);
            e.printStackTrace();
        } catch (LexicalException e) {
            System.err.println("Lexical Error: " + e.getMessage());
            System.exit(1);
        } catch (Parser.ParseException e) {
            System.err.println("Parse error: " + e.getMessage());
            System.exit(1);
        } catch (UnsupportedOperationException e) {
            System.err.println("Code generation error: " + e.getMessage());
            System.exit(1);
        }
    }
}